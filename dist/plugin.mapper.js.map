{
  "version": 3,
  "sources": ["../plugin.mapper.js"],
  "sourcesContent": ["const mapper = {\n\n\tmaps: [],\n\n\tcurrentMap: null,\n\n\ttypes: {},\n\tsystems: {},\n\tactions: {},\n\tsettings: {},\n\tbg: {},\n\n\tplayer: null,\n\n\n\n\tplay: function( mapData ) {\n\n\t\tbeep8.Utilities.checkObject( 'mapData', mapData );\n\n\t\tmapper.load( mapData );\n\n\t\tbeep8.Scene.add( 'menu', mapper.sceneMenu );\n\t\tbeep8.Scene.add( 'game', mapper.sceneGame );\n\t\tbeep8.Scene.set( 'menu' );\n\n\t},\n\n\n\n\tload: function( mapData, mapName = 'world', setCurrentMap = true ) {\n\n\t\tbeep8.Utilities.checkObject( 'mapData', mapData );\n\n\t\t// Combine map data into single string.\n\t\tconst mapDataString = mapData.map.join( '\\n' );\n\t\tbeep8.Utilities.checkString( 'mapDataString', mapDataString );\n\n\t\tmapper.settings = { ...mapData.settings };\n\t\tbeep8.Utilities.checkObject( 'mapper.settings', mapper.settings );\n\n\t\tconsole.log( 'settings', mapper.settings );\n\n\t\t// Setup player.\n\t\tmapper.player = beep8.ECS.create(\n\t\t\t{\n\t\t\t\tType: { name: 'player' },\n\t\t\t\tLoc: { row: 0, col: 0 },\n\t\t\t\tDirection: { dx: 0, dy: 0 },\n\t\t\t\tSprite: {\n\t\t\t\t\ttype: 'actor',\n\t\t\t\t\ttile: parseInt( mapper.settings.character ) || 6,\n\t\t\t\t\tfg: parseInt( mapper.settings.characterColor ) || 10,\n\t\t\t\t\tbg: 0,\n\t\t\t\t\tdepth: 100,\n\t\t\t\t},\n\t\t\t\tCharacterAnimation: {\n\t\t\t\t\tname: 'idle',\n\t\t\t\t\tdefault: 'idle',\n\t\t\t\t\tduration: 0,\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Convert maze strings to 2D array of characters.\n\t\tconst maze = beep8.Tilemap.convertFromText( mapDataString );\n\t\tconst map = beep8.Tilemap.createFromArray( maze, mapData.tiles );\n\n\t\tconsole.log( 'map', map );\n\t\tconsole.log( 'maze', maze );\n\n\t\tmapper.maps.push(\n\t\t\t{\n\t\t\t\t\"name\": mapName,\n\t\t\t\t\"screenWidth\": mapData.screenWidth,\n\t\t\t\t\"screenHeight\": mapData.screenHeight,\n\t\t\t\t\"screenCountX\": mapData.screenCountX,\n\t\t\t\t\"screenCountY\": mapData.screenCountY,\n\t\t\t\t\"mapWidth\": map[ 0 ].length,\n\t\t\t\t\"mapHeight\": map.length,\n\t\t\t\t\"map\": map,\n\t\t\t}\n\t\t);\n\n\t\tif ( setCurrentMap ) {\n\t\t\tmapper.setCurrentMap( mapName );\n\t\t}\n\n\t\t// Add objects.\n\t\tfor ( const obj of mapData.objects ) {\n\n\t\t\tconst handler = mapper.types[ obj.type ];\n\t\t\t// console.log( obj.type, handler );\n\t\t\tif ( handler?.spawn ) {\n\t\t\t\tshouldAdd = handler.spawn( obj.x, obj.y, obj.props );\n\t\t\t}\n\n\t\t}\n\n\t\t// Add systems.\n\t\tbeep8.ECS.addSystem( 'characterAnimation', mapper.systems.characterAnimation );\n\n\t\t// Play music.\n\t\tif ( mapper.settings.bgm ) {\n\t\t\tbeep8.Music.play( world.settings.bgm );\n\t\t}\n\n\t\t// Validate map data.\n\t\tif (\n\t\t\tmapper.settings.splash &&\n\t\t\tmapper.settings.splash.length > 10 &&\n\t\t\tbeep8.Tilemap.validateTilemap( mapper.settings.splash )\n\t\t) {\n\n\t\t\tmapper.bg.splash = beep8.Tilemap.load( mapper.settings.splash );\n\n\t\t}\n\n\t},\n\n\n\n\tupdate: function( dt ) {\n\n\t\tbeep8.ECS.run( dt );\n\n\t},\n\n\n\tdrawActor: function( actor ) {\n\n\t\tif ( !mapper.currentMap ) {\n\t\t\tbeep8.Utilities.error( \"No current map set.\" );\n\t\t\treturn;\n\t\t}\n\n\t\tconst screenPosition = mapper.camera.getScreenPosition( actor.col, actor.row );\n\n\t\tconst actorX = actor.col - screenPosition.col;\n\t\tconst actorY = actor.row - screenPosition.row;\n\n\t\t// Draw the actor at its position with the specified offset.\n\t\tbeep8.locate( actorX + offsetX, actorY + offsetY );\n\t\tbeep8.color( actor.fg, actor.bg );\n\t\tbeep8.drawActor( actor.id, actor.animation );\n\n\t},\n\n\n\trender: function( offsetX = 0, offsetY = 0 ) {\n\n\t\t// Handy caches so look-ups are O(1) inside the loop\n\t\tconst list = [];\n\n\t\tfor ( const id of beep8.ECS.query( 'Sprite', 'Loc' ) ) {\n\t\t\tconst spr = beep8.ECS.getComponent( id, 'Sprite' );\n\t\t\tconst loc = beep8.ECS.getComponent( id, 'Loc' );\n\t\t\tconst anim = beep8.ECS.getComponent( id, 'CharacterAnimation' );\n\t\t\tlist.push( { spr, loc, anim } );\n\t\t}\n\n\t\t// nothing to draw\n\t\tif ( list.length === 0 ) return;\n\n\t\t// Depth-sort (default depth = 0)\n\t\tlist.sort( ( a, b ) => ( a.spr.depth ?? 0 ) - ( b.spr.depth ?? 0 ) );\n\n\t\t// Draw\n\t\tfor ( const { spr, loc, anim } of list ) {\n\n\t\t\tconst pos = mapper.camera.getTilePosition( loc.col, loc.row );\n\n\t\t\tbeep8.locate( pos.col + offsetX, pos.row + offsetY );\n\t\t\tbeep8.color( spr.fg ?? 15, spr.bg ?? 0 );\n\n\t\t\tif ( 'actor' === spr.type ) {\n\t\t\t\tbeep8.drawActor( parseInt( spr.tile ), anim.name );\n\t\t\t} else {\n\t\t\t\tbeep8.printChar( parseInt( spr.tile ) );\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\n\tdrawScreen: function() {\n\n\t\tif ( !mapper.currentMap ) {\n\t\t\tbeep8.Utilities.error( \"No current map set.\" );\n\t\t\treturn;\n\t\t}\n\n\t\tconst loc = beep8.ECS.getComponent( mapper.player, 'Loc' );\n\t\tconst screenPosition = mapper.camera.getScreenPosition( loc.col, loc.row );\n\t\tconst currentMap = mapper.currentMap;\n\n\t\tbeep8.Tilemap.draw(\n\t\t\tcurrentMap.map,\n\t\t\tscreenPosition.col,\n\t\t\tscreenPosition.row,\n\t\t\tscreenPosition.w,\n\t\t\tscreenPosition.h\n\t\t);\n\n\t},\n\n\n\tsetCurrentMap: function( mapName ) {\n\n\t\tlet currentMap = mapper.maps.find( map => map.name === mapName );\n\t\tif ( !currentMap ) {\n\t\t\tconsole.error( `Map \"${mapName}\" not found.` );\n\t\t\treturn;\n\t\t}\n\n\t\tmapper.currentMap = currentMap;\n\n\t},\n\n\n\tsetTile: function( x, y, tile ) {\n\n\t\tif ( !mapper.currentMap ) {\n\t\t\tbeep8.Utilities.error( \"No current map set.\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tx < 0 ||\n\t\t\ty < 0 ||\n\t\t\ty >= mapper.currentMap.map.mapHeight ||\n\t\t\tx >= mapper.currentMap.map.mapWidth\n\t\t) {\n\t\t\tbeep8.Utilities.error( \"Mapper.setTile, coordinates out of bounds.\" );\n\t\t\treturn;\n\t\t}\n\n\t\tmapper.currentMap.map[ y ][ x ] = tile;\n\n\t},\n\n\n\tgetVerbForEntity: ( id ) => {\n\n\t\tconst a = beep8.ECS.getComponent( id, 'Action' );\n\t\treturn a?.verb ?? '';\n\n\t},\n\n\tpromptAhead: ( playerId ) => {\n\n\t\tconst ids = mapper.entitiesAhead( playerId );\n\t\tfor ( const id of ids ) {\n\t\t\tconst verb = mapper.getVerbForEntity( id );\n\t\t\tif ( verb ) return verb;\n\t\t}\n\t\treturn '';\n\n\t},\n\n\n\t// Tile in front of the player\n\tahead: ( playerId ) => {\n\n\t\tconst loc = beep8.ECS.getComponent( playerId, 'Loc' );\n\t\tconst dir = beep8.ECS.getComponent( playerId, 'Direction' ); // {dx,dy}\n\t\tconst x = loc.col + ( dir.dx || 0 );\n\t\tconst y = loc.row + ( dir.dy || 0 );\n\t\treturn { x, y };\n\n\t},\n\n\n\t// Entities on that tile\n\tentitiesAhead: ( playerId ) => {\n\n\t\tconst { x, y } = mapper.ahead( playerId );\n\t\treturn beep8.ECS.entitiesAt( x, y ) ?? [];\n\n\t},\n\n\n\tdoCollision: function( x, y, newCol, newRow, dx, dy ) {\n\n\t\t// ECS collision.\n\t\tif ( mapper.systems.tryPushing( x, y, dx, dy ) ) return true;\n\n\t\t// every entity occupying the target tile\n\t\tfor ( const id of beep8.ECS.entitiesAt( newCol, newRow ) ) {\n\n\t\t\tconst typeComp = beep8.ECS.getComponent( id, 'Type' );\n\t\t\tconst handler = typeComp ? mapper.types[ typeComp.name ] : null;\n\n\t\t\tif ( handler?.onCharacterCollision ) {\n\t\t\t\tconst blocked = handler.onCharacterCollision( id, newCol, newRow, dx, dy );\n\t\t\t\tif ( blocked ) return true;\n\t\t\t}\n\n\t\t\tconst isSolid = beep8.ECS.hasComponent( id, 'Solid' );\n\t\t\tif ( isSolid ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\n\tdoAction: ( playerId ) => {\n\n\t\tconst action = mapper.promptAhead( playerId );\n\n\t\tconsole.log( 'do action ', action );\n\n\t\tif ( action && mapper.actions[ action ] ) {\n\t\t\tmapper.actions[ action ]( playerId );\n\t\t}\n\n\t},\n\n\n};\n\n\nmapper.CONFIG = {\n\n\tspikeInterval: 1, // Time in seconds for spikes to toggle state\n\n\tmoveDelay: 0.15, // Time in seconds for player movement delay\n\n\n\t/**\n\t * Offset to apply when drawing the map and actors.\n\t * This is to account for any borders or UI elements.\n\t */\n\tmapOffsetX: 1,\n\tmapOffsetY: 1,\n\n\n\tgameUI: `hpgYhRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGGEIAACghRhhCAAAoIUYYQgAAKCFGJUHAACghRiVBwAAoIUYlQcAAKCFGJUKAACgmBiFGBwHBgCghRgZBwYAoIUYGQcGAKCFGBkHBgCghRgZBwYAoIUYGQcGAKCFDAYHAKCFGBkHBgCghRgZBwYAoIUYGQcGAKCFGBkHBgCghRgZBwYAoIUYGQcGAKCFGBkHBgCghRgZBwYAoIUYGQcGAKCFGBkHBgCghRgZBwYAoIUYGQcGAKCFGB0HBgCghRgZBwgAoIUYIAgHAKCFGCsHBgCghRkBXAoAAKCYGIUYKwYHAKCFEgAHAKCFAAgAAKCFAAgAAKCFAAgAAKCFAwEAAKCFAAgAAKCFAA8AAKCFEwAHAKCFAQcGAKCFGQG0CgcAoIUBBwYAoIUBBwYAoIUBBwYAoIUZAbUKBwCghQEHBgCghQEHBgCghQEHBgCghQEHBgCghREGBwCghQAAAACghRMABwCghRgrBwYAoIUZAV4KAACgmBiFGCsGBwCghQEABwCghRkBnwgAAKCFGQGfCAAAoIUZAZ8IAACghRkBnwgAAKCFGQGfCAAAoIUZAZ8IAACghQEABwCghRg9AAEAoIUYPQABAKCFGD0AAQCghRg9AAEAoIUYPQABAKCFGD0AAQCghRg9AAEAoIUYPQABAKCFGD4AAQCghQEHBgCghRgrBwYAoIUAAAAAoIUAAAAAoIUYKwcGAKCFGQFdCgAAoJgYhRgrBgcAoIUBAAcAoIUBAAEAoIUADgAAoIUADwAAoIUADwAAoIUADwAAoIUADwAAoIUAAQAAoIUABQEAoIUBAQcAoIUBAQcAoIUBAQcAoIUBAQcAoIUBAQcAoIUBAQcAoIUBAQcAoIUYUAABAKCFAAYHAKCFGCsHBgCghQAAAACghRglAAcAoIUYKwcGAKCFGQFeCgAAoJgYhRguBwYAoIUBAAEAoIUAAQAAoIUAAQAAoIUAAQAAoIUAAQAAoIURAQAAoIURAQAAoIUBAAEAoIUYYQABAKCFGGEAAQCghRhhAAEAoIUYYQABAKCFGGEAAQCghRhhAAEAoIURBgEAoIURBgEAoIUYYgABAKCFEQYHAKCFGC8HBgCghRgZBgcAoIUYGQYHAKCFGDEHBgCghRkBXQoAAKA=`,\n\n};\n\n\nmapper.actions.pull = function( playerId ) {\n\n\tconst loc = beep8.ECS.getComponent( playerId, 'Loc' );\n\tconst dir = beep8.ECS.getComponent( playerId, 'Direction' ); // {dx,dy}\n\n\tmapper.systems.tryPulling( loc.col, loc.row, dir.dx, dir.dy, playerId );\n\n};\nmapper.actions.read = async function( playerId ) {\n\n\tconst entities = mapper.entitiesAhead( playerId );\n\n\tfor ( const id of entities ) {\n\t\tconst obj = beep8.ECS.getComponent( id, 'Message' );\n\t\tconst sprite = beep8.ECS.getComponent( id, 'Sprite' );\n\n\t\tif ( !obj || !sprite ) continue;\n\n\t\tbeep8.color( sprite.fg ?? 15, sprite.bg ?? 5 );\n\t\tawait beep8.Async.dialogTypewriter( obj.message, [ \"OK\" ], 20 );\n\t}\n\n};\nmapper.camera = {\n\n\tgetScreenPosition: function( pCol, pRow ) {\n\n\t\tif ( !mapper.currentMap ) {\n\t\t\tbeep8.Utilities.error( \"No current map set.\" );\n\t\t\treturn { col: 0, row: 0 };\n\t\t}\n\n\t\tconst currentMap = mapper.currentMap;\n\n\t\tconst screenWidth = currentMap.screenWidth;\n\t\tconst screenHeight = currentMap.screenHeight;\n\n\t\t// Calculate which screen to draw based on player position.\n\t\tconst screenX = Math.floor( pCol / screenWidth ) * screenWidth;\n\t\tconst screenY = Math.floor( pRow / screenHeight ) * screenHeight;\n\n\t\treturn { col: screenX, row: screenY, w: screenWidth, h: screenHeight };\n\n\t},\n\n\n\tgetTilePosition: function( col, row ) {\n\n\t\tconst loc = beep8.ECS.getComponent( mapper.player, 'Loc' );\n\t\tconst pos = mapper.camera.getScreenPosition( loc.col, loc.row );\n\n\t\tlet tileCol = col - pos.col;\n\t\tlet tileRow = row - pos.row;\n\n\t\t// If out of bounds push off the screen to avoid rendering.\n\t\tif ( tileCol < 0 ) tileCol = -100;\n\t\tif ( tileRow < 0 ) tileRow = -100;\n\t\tif ( tileCol >= pos.w ) tileCol = -100;\n\t\tif ( tileRow >= pos.h ) tileRow = -100;\n\n\t\treturn {\n\t\t\tcol: tileCol,\n\t\t\trow: tileRow,\n\t\t};\n\n\t},\n\n\n};\nmapper.collision = {\n\n\tisSolidAt: ( col, row ) => {\n\t\treturn beep8.ECS.entitiesAt( col, row ).some( id => beep8.ECS.hasComponent( id, 'Solid' ) );\n\t},\n\n\tisFree: ( col, row ) => {\n\t\treturn mapper.collision.isWalkable( col, row ) && !mapper.collision.isSolidAt( col, row );\n\t},\n\n\t// Returns true if (col,row) is inside the maze and not a wall or closed door.\n\tisWalkable: function( col, row ) {\n\n\t\t// Check bounds.\n\t\tif (\n\t\t\tcol < 0 ||\n\t\t\trow < 0 ||\n\t\t\tcol >= mapper.currentMap.map.mapHeight ||\n\t\t\trow >= mapper.currentMap.map.mapWidth\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet mapCell = mapper.currentMap.map[ row ][ col ];\n\n\t\tif ( true === mapCell[ 3 ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for spikes.\n\t\t// if ( cell === '^' ) {\n\t\t// \tlet spike = Tile.spikes.list.find( s => s.x === x && s.y === y );\n\t\t// \tif ( spike && spike.up ) {\n\t\t// \t\treturn false;\n\t\t// \t}\n\t\t// }\n\n\t\treturn true;\n\n\t},\n\n};\nmapper.helpers = {\n\n\tcapitalizeWords: ( str ) => {\n\t\treturn str.replace( /\\b\\p{L}/gu, c => c.toUpperCase() )\n\t},\n\n}\nmapper.menu = {\n\n\t/**\n\t * Get the instructions text.\n\t *\n\t * @returns {string} The instructions text.\n\t */\n\tgetInstructions: function() {\n\n\t\tif ( mapper.hasInstructions() ) {\n\t\t\treturn mapper.settings.instructions;\n\t\t}\n\t\treturn '';\n\n\t},\n\n\n\t/**\n\t * Check if there are instructions available.\n\t *\n\t * @returns {boolean} True if instructions are available, false otherwise.\n\t */\n\thasInstructions: function() {\n\n\t\treturn !!mapper.settings.instructions;\n\n\t},\n\n\n\t/**\n\t * Get the credits text.\n\t *\n\t * @returns {string} The credits text.\n\t */\n\tgetCredits: function() {\n\n\t\tif ( mapper.hasCredits() ) {\n\t\t\treturn mapper.settings.credits;\n\t\t}\n\t\treturn '';\n\n\t},\n\n\n\t/**\n\t * Check if there are credits available.\n\t *\n\t * @returns {boolean} True if credits are available, false otherwise.\n\t */\n\thasCredits: function() {\n\n\t\treturn !!mapper.settings.credits;\n\n\t},\n\n\n\t/**\n\t * Draw the splash screen.\n\t *\n\t * @returns {void}\n\t */\n\tdrawSplash: function() {\n\n\t\tif ( mapper.bg.splash ) {\n\t\t\tbeep8.Tilemap.draw( mapper.bg.splash );\n\n\t\t\t// Beep8 Logo\n\t\t\tconsole.log( 'Drawing Beep8 logo' );\n\t\t\tbeep8.locate( beep8.CONFIG.SCREEN_COLS - 1, beep8.CONFIG.SCREEN_ROWS - 1 );\n\t\t\tbeep8.color( 15, 0 );\n\t\t\tbeep8.printChar( 88 );\n\t\t}\n\n\t},\n\n\n\t/**\n\t * Check if there is a splash screen available.\n\t *\n\t * @returns {boolean} True if a splash screen is available, false otherwise.\n\t */\n\thasSplash: function() {\n\n\t\treturn !!mapper.bg.splash;\n\n\t},\n\n};\nmapper.sceneGame = {\n\n\tUI: null,\n\n\n\tinit: function() {\n\n\t\tconsole.log( mapper.CONFIG );\n\n\t\tmapper.sceneGame.UI = beep8.Tilemap.load( mapper.CONFIG.gameUI );\n\n\t},\n\n\n\tupdate: function( dt ) {\n\n\t\tmapper.CONFIG.moveDelay -= dt;\n\t\tif ( mapper.CONFIG.moveDelay > 0 ) return;\n\n\t\t// Get player components\n\t\tconst loc = beep8.ECS.getComponent( mapper.player, 'Loc' );\n\t\tconst anim = beep8.ECS.getComponent( mapper.player, 'CharacterAnimation' );\n\n\t\tif ( mapper.CONFIG.moveDelay > 0 ) return;\n\n\t\tlet dx = 0, dy = 0;\n\n\t\t// Calculate direction of movement.\n\t\t// Use else if so we can only move in one direction at a time and not jump\n\t\t// over collision walls diagonally.\n\t\tif ( beep8.keyp( \"ArrowUp\" ) ) { dy = -1; }\n\t\telse if ( beep8.keyp( \"ArrowDown\" ) ) { dy = 1; }\n\t\telse if ( beep8.keyp( \"ArrowLeft\" ) ) { dx = -1; }\n\t\telse if ( beep8.keyp( \"ArrowRight\" ) ) { dx = 1; }\n\t\tif ( beep8.keyp( \"ButtonB\" ) ) mapper.doAction( mapper.player );\n\n\t\tif ( dx !== 0 || dy !== 0 ) {\n\n\t\t\tlet newCol = loc.col + dx;\n\t\t\tlet newRow = loc.row + dy;\n\n\t\t\tif ( dy > 0 ) anim.name = 'move-down';\n\t\t\tif ( dy < 0 ) anim.name = 'move-up';\n\t\t\tif ( dx > 0 ) anim.name = 'move-right';\n\t\t\tif ( dx < 0 ) anim.name = 'move-left';\n\t\t\tanim.duration = 0.3;\n\n\t\t\t// Now check for regular collision (walls etc).\n\t\t\tif ( !mapper.collision.isWalkable( newCol, newRow ) || mapper.doCollision( loc.col, loc.row, newCol, newRow, dx, dy ) ) {\n\t\t\t\tnewCol = loc.col;\n\t\t\t\tnewRow = loc.row;\n\t\t\t}\n\n\t\t\tbeep8.ECS.set( mapper.player, 'Direction', { dx, dy } );\n\t\t\tbeep8.ECS.setLoc( mapper.player, newCol, newRow );\n\n\t\t\tmapper.CONFIG.moveDelay = 0.15;\n\n\t\t}\n\n\t\tmapper.update( dt );\n\n\t},\n\n\n\trender: function() {\n\n\t\tbeep8.cls();\n\n\t\tbeep8.locate( mapper.CONFIG.mapOffsetX, mapper.CONFIG.mapOffsetY );\n\t\tmapper.drawScreen();\n\t\tmapper.render( mapper.CONFIG.mapOffsetX, mapper.CONFIG.mapOffsetY );\n\n\t\t// Draw UI background.\n\t\tbeep8.locate( 0, beep8.CONFIG.SCREEN_ROWS - mapper.sceneGame.UI.length );\n\t\tbeep8.Tilemap.draw( mapper.sceneGame.UI );\n\n\t\t// Draw currency value.\n\t\tbeep8.locate( 2, beep8.CONFIG.SCREEN_ROWS - 2 );\n\t\tbeep8.color( mapper.settings.coinColor, 0 );\n\t\tbeep8.printChar( mapper.settings.coin || 266 );\n\n\t\tbeep8.color( 15, 0 );\n\t\tbeep8.print( ' ' + parseInt( beep8.Inventory.getCount( 'coin' ) ).toString().padStart( 4, '0' ) );\n\n\t\t// Draw keys.\n\t\tconst keys = beep8.Inventory.filter( /^key/ );\n\t\t// Loop through keys and draw them.\n\t\tkeys.forEach(\n\t\t\t( item, index ) => {\n\t\t\t\tconst color = parseInt( item.id.split( '-' )[ 1 ] ) || 15;\n\t\t\t\tbeep8.locate( 10 + index, beep8.CONFIG.SCREEN_ROWS - 2 );\n\t\t\t\tbeep8.color( color, -1 );\n\t\t\t\tbeep8.printChar( 255 );\n\t\t\t}\n\t\t);\n\n\t\t// Draw actions.\n\t\t// -------------\n\t\tbeep8.color( 15, -1 );\n\n\t\t// A button.\n\t\tbeep8.locate( 11, beep8.CONFIG.SCREEN_ROWS - 4 );\n\t\tbeep8.print( ' ' );\n\n\t\t// B button.\n\t\tbeep8.locate( 15, beep8.CONFIG.SCREEN_ROWS - 4 );\n\t\tbeep8.print( mapper.helpers.capitalizeWords( ' ' + mapper.promptAhead( mapper.player ) ) );\n\n\t\treturn;\n\n\t},\n\n};\n// const menuBg = `mB6YGIUBBAAAoIUBBAAAoIUBBAAAoIUDBQQAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUSDwQAoIUTDwQAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIURAwQAoIURAwQAoIUBBAAAoJgYhREDBACghQEEAACghQEEAACghQEEAACghRgpCgQAoIUBBAAAoIUBBAAAoIUSDwQAoIUBDwQAoIUBDwQAoIUABA8AoIUBDwQAoIUTDwQAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUDBQQAoIUBBAAAoIURAwQAoIURAwQAoIUBBAAAoJgYhREDBACghQEEAACghQEEAACghQEEAACghQEKDQCghQEEAACghQAKBACghRgkDwQAoIUYcgQKAKCFGD0ECgCghRigBA8AoIUYPQQKAKCFCwQPAKCFAQoNAKCFAQQAAKCFEg0EAKCFAg0MAKCFEw0EAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCYGIUBBAAAoIUBBAAAoIURAwQAoIURAwQAoIUBCg0AoIUWCgQAoIUABAoAoIUBBAAAoIUYTgQKAKCFGD0ECgCghQMFBACghRgoBAoAoIUBCg0AoIUBCg0AoIUBBAAAoIUACg0AoIUYKQQNAKCFAAoNAKCFGBkNBACghRgZDQQAoIUYGQ0EAKCFGBkNBACghQEEAACghQEEAACgmBiFAQQAAKCFAQQAAKCFEQMEAKCFEQMEAKCFAQoNAKCFAgoJAKCFAQQAAKCFAQQAAKCFGE4ECgCghQEEDQCghQEEAACghQEEAACghQEEAACghQEKDQCghQEEAACghQAKDQCghRgqBA0AoIUACg0AoIUABA0AoIUABA0AoIUABA0AoIUYJQ0EAKCFAQQAAKCFAQQAAKCYGIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUBCg0AoIUYKAQKAKCFGGEECgCghQEEAACghRhOBAoAoIUBCg0AoIUACgQAoIUBCg0AoIUBCg0AoIUWBAoAoIUBBAAAoIUYJA0EAKCFGGEFDQCghRglDQQAoIUBBA0AoIUABA0AoIUYgQ0EAKCFAQQAAKCFAwUEAKCFAQQAAKCYGIUBBAAAoIUDBQQAoIUBBAAAoIUBBAAAoIUYKgoEAKCFAQQAAKCFGCkKBACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACghQEEAACgmBiFGDUNBACghRgyDQQAoIUBBAAAoIUBBAAAoIUSDwQAoIURBA8AoIUYTgQKAKCFEQQPAKCFEw8EAKCFAQQAAKCFGE4ECgCghQEEAACghQEKBACghQEEAACghQEKBACghQEKBACghQEEAACghRYKBACghRhQBAoAoIUACgQAoIUABAoAoIUCCgkAoIUCCgkAoIUBBAAAoJgYhRgiBA0AoIUYIQQNAKCFAQQAAKCFEg8EAKCFAQ8EAKCFAQ8EAKCFGE4ECgCghRYKDwCghRhQBAoAoIUTDwQAoIUYTgQKAKCFGBoKBACghQIKCQCghQEEAACghQEKBACghRg9BAoAoIUBBAAAoIUBCgQAoIUYcwQKAKCFAQQKAKCFAQQAAKCFGFAECgCghQEEAACghRIPBACgmBiFAAANAKCFEAwNAKCFGDINBACghRgkDwQAoIUBDwQAoIUYoAQPAKCFGE4ECgCghRhQBAoAoIULBA8AoIULBA8AoIUYTgQKAKCFAgoJAKCFAgoJAKCFAwUEAKCFAQoEAKCFAQQAAKCFAQQAAKCFAQQKAKCFGFAECgCghQEECgCghRIPBACghRhQBAoAoIUBDw0AoIUBDw0AoJgYhQMFDQCghQAADQCghRghBA0AoIUBBAAAoIUBBAAAoIUBBAAAoIUYTgQKAKCFGCgECgCghRhQBAoAoIUBBAAAoIUYTgQKAKCFGBoECgCghQEKBACghQEEAACghQEKBACghQEKBACghQEEAACghQEKBACghRhQBAoAoIUSDwQAoIUYoAQPAKCFGFAECgCghQsEDwCghQsEDwCgmBiFAAANAKCFAwUNAKCFGDIBDQCghQAABACghQAABACghQEEAACghRgqCgQAoIUBBAAAoIUBBAAAoIUBBAAAoIUACgQAoIUBBAAAoIUACgQAoIUBBAAAoIUBBAAAoIUBBAAAoIUBBAAAoIUXDwQAoIUBDw0AoIUYoAQPAKCFGLMEDwCghRigBA8AoIULBA8AoIULBA8AoJgYhREBDQCghRgyAQ0AoIUAAA0AoIUYMg0EAKCFAAAEAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAwUEAKCFAQQAAKCFAQQAAKCFAQQAAKCFEQMEAKCFEQMEAKCFEQMEAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCFAQQAAKCYGIUDBQ0AoIUAAA0AoIUAAA0AoIUYIQQNAKCFAAAEAKCFAQQAAKCFEQMEAKCFEQMEAKCFEQMEAKCFAAMEAKCFAAAEAKCFAAAEAKCFEQMEAKCFAAAEAKCFAAAEAKCFAAAEAKCFEQMEAKCFEQMEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAQQAAKCYGIUDBQ0AoIUBDQQAoIUJDQUAoIUYMgENAKCFAAAEAKCFAAAEAKCFEQMEAKCFEQMEAKCFEQMEAKCFAQQAAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFAAAEAKCFGEsHBACghRhLBwQAoIUAAAQAoIUDBQQAoIURAwQAoJgYhQAADQCghQAADQCghQAADQCghQAADQCghRgyDQQAoIUAAAQAoIUBBAAAoIUBBAAAoIUBBAAAoIUACAQAoIUYNAgEAKCFAAAEAKCFGHcDBACghQAABACghQAABACghQAABACghQAABACghQAABACghQAABACghRkBTQIFAKCFGQFNAgUAoIUYMwgEAKCFAAAEAKCFEQMEAKCYGIURAQ0AoIUQDA0AoIUAAA0AoIUYMgENAKCFGCEEDQCghQMFBACghRg1BQQAoIUYMgUEAKCFAQQAAKCFAAgEAKCFGBkHCACghRgZBwgAoIUYGQcIAKCFGBkHCACghRgZBwgAoIUYGQcIAKCFGBkHCACghRgZBwgAoIUYGQcIAKCFGQFOAgUAoIUZAU0CBQCghRgZBwgAoIUACAQAoIUYNQUEAKCYGIUDBQ0AoIUDBQ0AoIUAAA0AoIUQDA0AoIUYIQQNAKCFAAAEAKCFGCIEBQCghRghBAUAoIUBBAAAoIUDBQQAoIURBwgAoIURBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghRkBTQIFAKCFGQFNAgUAoIUZAQgHCACghRgyBQQAoIUYIgQFAKCYGIUAAA0AoIUAAA0AoIUAAA0AoIUAAA0AoIUAAA0AoIUYLAQFAKCFAAIFAKCFGCkBBQCghRgyBQQAoIUYGgEEAKCFGQEIBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIURBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghRkBCAgHAKCFGQEICAcAoIUZAQgHCACghQACBQCghRgaAQUAoJgYhQMFDQCghQMFDQCghQAADQCghQAADQCghRAMDQCghRgoDQUAoIUYNQEFAKCFAAIBAKCFGCwFAQCghQACAQCghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghREHCACghRkBCAcIAKCFGQEIBwgAoIUZAQgHCACghRkBCAcIAKCFGQEIBwgAoIUYNQEFAKCFAAIBAKCYGIURAQ0AoIUDBQ0AoIUAAA0AoIUYMgENAKCFEAwNAKCFAAANAKCFAAIBAKCFAAIBAKCFAAIBAKCFGFkFAQCghRkBTQUBAKCFGQFNBQEAoIUZAU0FAQCghRkBTgUBAKCFGQFPBQEAoIUZAU0FAQCghRkBTQUBAKCFGQFNBQEAoIUZAU0FAQCghRkBTgUBAKCFGQFNBQEAoIUZAU0FAQCghRhXBQEAoIUAAgEAoJgYhQMFDQCghQAADQCghQMFDQCghQAADQCghQAADQCghRgyAQ0AoIUYMg0BAKCFAAIBAKCFAAIBAKCFGFkCAQCghRkBTQIFAKCFGQFOAgUAoIUZAU0CBQCghRkBTQIFAKCFGHIBDQCghRg9AQ0AoIUYPQENAKCFGHMBDQCghRkBTQIFAKCFGQFNAgUAoIUZAU0CBQCghRkBTgIFAKCFGFcCAQCghQACAQCgmBiFEQENAKCFAwUNAKCFAAANAKCFAAANAKCFCQ0FAKCFAAANAKCFGCEBDQCghQACAQCghQACAQCghRhZAgEAoIUZAU0CBQCghQEABQCghRkBTQIFAKCFGQFNAgUAoIUYTgENAKCFAQAFAKCFAQANAKCFGFAFDQCghRkBTQIFAKCFAQAFAKCFAQAEAKCFGQFNAgUAoIUYVwIBAKCFAAIBAKCYGIUAAA0AoIUAAA0AoIUAAA0AoIUDBQ0AoIUAAA0AoIUYMgENAKCFAAANAKCFGQEgDA0AoIUZATIMDQCghRkBMgwNAKCFGQFNAgUAoIUYKwABAKCFGQFNAgUAoIUZAU0CBQCghRhOAQ0AoIUYKwABAKCFAQEFAKCFGFAFDQCghRkBTQIFAKCFGCsAAQCghQEBAQCghRkBTQIFAKCFGQEgDA0AoIUZASEMDQCgmBiFGDIGDQCghQMFDQCghRgyBg0AoIUYNAwNAKCFGDQMDQCghQAADQCghRgyDQwAoIUZATMNDACghRENDACghRENDACghRkBTQIFAKCFGBkCAwCghRkBTQIFAKCFGQFOAgUAoIUYTgENAKCFGD0MDQCghRg9DA0AoIUYUAUNAKCFGQFNAgUAoIUYGQIDAKCFGDcDDwCghRg3Aw8AoIUYNwMPAKCFEQ0MAKCYGIULBgcAoIULBgcAoIUOBgcAoIUYVwcMAKCFAAAMAKCFGQEgDQwAoIUZASUNDACghQAADACghRkBJQ0MAKCFGFMCDACghRkBTgIFAKCFGQFNAgUAoIUZAU8CBQCghRkBTQIFAKCFGIQFDQCghQsNBQCghRhhBQ0AoIUYhQUNAKCFGQFNAgUAoIUZAU0CBQCghRg3Aw8AoIUYNwMPAKCFGDcDDwCghRkBNw0MAKCYGIURBgcAoIUY5QYHAKCFGQEaBgcAoIUYVwcMAKCFAQwAAKCFEQ0MAKCFAQwAAKCFGQElDQwAoIUBDAAAoIUYUw0MAKCFAQ0MAKCFGQEyDA0AoIUBDQwAoIUZATcMDQCghQENDACghQENDACghRkBMgwNAKCFAQ0MAKCFGQEzDA0AoIUBDQwAoIUBDQwAoIUYPQUPAKCFAQwAAKCFGQElDQwAoJgYhRiUBw0AoIUYlAcNAKCFGJQHDQCghRgoDQwAoIUZASUNDACghQEMAACghRkBJQ0MAKCFGQElDQwAoIURDQwAoIUYVg0MAKCFGQE3DA0AoIUZATMMDQCghQENDACghRcFDQCghQEFDACghRglBQ0AoIUBDQwAoIUZATIMDQCghRkBNwwNAKCFAQ0MAKCFGQEzDA0AoIUBDQwAoIUZATUNDACghRENDACgmBiFAwENAKCFGQEzDA0AoIUZASUMDQCghRkBNwwNAKCFGCgNDACghRkBJQ0MAKCFAQwAAKCFGQEgDQwAoIUZATcNDACghRkBJQ0MAKCFAw0MAKCFAw0MAKCFGQElDQwAoIUDDQwAoIUZATcNDACghRcCDACghQMNAgCghRMCDACghRkBMw0MAKCFGFYNDACghRkBNwwNAKCFGQEyDA0AoIUZATMMDQCghRkBJQ0MAKCYGIUYWAwNAKCFGQElDA0AoIUZASUMDQCghQAMDQCghRkBMwwNAKCFGQEzDA0AoIUZATcMDQCghRgoDQwAoIUZASUNDACghQEMAACghRkBNw0MAKCFAQwAAKCFGQEzDQwAoIUZATcNDACghRICDACghRgYAgwAoIUZATMNDACghRkBJQ0MAKCFAQwAAKCFGQElDQwAoIUZASUNDACghRkBJQ0MAKCFGQElDQwAoIUZASUNDACg`;\n\nmapper.sceneMenu = {\n\n\tinit: function() {\n\n\t\t// No splash screen so skip the menu.\n\t\tif ( !mapper.menu.hasSplash() ) return;\n\n\t\tmapper.sceneMenu.main();\n\n\t},\n\n\n\tmain: async () => {\n\n\t\tbeep8.locate( 0, 0 );\n\t\tmapper.menu.drawSplash();\n\n\t\tbeep8.locate( 5, 18 );\n\t\tbeep8.color( 0, 10 );\n\n\t\tlet menuChoices = [ \"Start Game\", ];\n\t\tif ( mapper.menu.hasInstructions() ) menuChoices.push( \"Instructions\" );\n\t\tif ( mapper.menu.hasCredits() ) menuChoices.push( \"Credits\" );\n\n\t\tlet choice = await beep8.Async.menu(\n\t\t\tmenuChoices,\n\t\t\t{\n\t\t\t\tborder: false,\n\t\t\t\tpadding: 0,\n\t\t\t\tcenterH: true,\n\t\t\t}\n\t\t);\n\n\t\tconst selected = menuChoices[ choice ];\n\n\t\t// Start a new game.\n\t\tif ( 'Start Game' === selected ) {\n\t\t\tbeep8.Scene.set( 'game' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Show instructions.\n\t\tif ( 'Instructions' === selected ) {\n\t\t\tbeep8.locate( 2, 2 );\n\t\t\tbeep8.color( 15, 13 );\n\t\t\tconst instructions = beep8.wrapText(\n\t\t\t\tmapper.menu.getInstructions(),\n\t\t\t\tbeep8.CONFIG.SCREEN_COLS - 6\n\t\t\t);\n\t\t\tawait beep8.Async.dialog( instructions, [ \"OK\" ] );\n\t\t}\n\n\t\t// Show credits.\n\t\tif ( 'Credits' === selected ) {\n\t\t\tbeep8.locate( 2, 2 );\n\t\t\tbeep8.color( 15, 13 );\n\t\t\tconst credits = beep8.wrapText(\n\t\t\t\tmapper.menu.getCredits(),\n\t\t\t\tbeep8.CONFIG.SCREEN_COLS - 6\n\t\t\t);\n\t\t\tawait beep8.Async.dialog( credits, [ \"OK\" ] );\n\t\t}\n\n\t\tsetTimeout( mapper.sceneMenu.main, 10 );\n\n\t}\n\n};\n\nmapper.systems.characterAnimation = function( dt ) {\n\n\tconst anims = beep8.ECS.query( 'CharacterAnimation' );\n\tif ( !anims ) return;\n\n\t// Loop through anims.\n\tfor ( const id of anims ) {\n\n\t\tconst anim = beep8.ECS.getComponent( id, 'CharacterAnimation' );\n\t\tif ( !anim ) continue;\n\n\t\tif ( anim.duration > 0 ) {\n\n\t\t\tanim.duration -= dt;\n\t\t\tif ( anim.duration <= 0 ) {\n\n\t\t\t\tlet defaultAnimation = anim.default || '';\n\t\t\t\tconst direction = beep8.ECS.getComponent( id, 'Direction' );\n\n\t\t\t\tif ( direction ) {\n\t\t\t\t\tconst directionNames = {\n\t\t\t\t\t\t'0,1': '',\n\t\t\t\t\t\t'0,-1': '-up',\n\t\t\t\t\t\t'1,0': '-right',\n\t\t\t\t\t\t'-1,0': '-left'\n\t\t\t\t\t};\n\t\t\t\t\tconst directionName = directionNames[ `${direction.dx},${direction.dy}` ] || '';\n\t\t\t\t\tdefaultAnimation = defaultAnimation + directionName;\n\t\t\t\t}\n\n\t\t\t\tanim.name = defaultAnimation;\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n\nmapper.systems.tryPortal = async function( col, row ) {\n\n\tconst id = beep8.ECS.entitiesAt( col, row );\n\tconsole.log( 'Checking for portal at', col, row, id );\n\tif ( !id ) return false;\n\n\tfor ( const entityId of id ) {\n\t\tconst portal = beep8.ECS.getComponent( entityId, 'Portal' );\n\t\treturn mapper.systems.handlePortal( portal );\n\t}\n\n}\n\nmapper.systems.handlePortal = async function( portal ) {\n\n\tif ( !portal ) return false;\n\tif ( portal.target === '' ) return false;\n\n\t// Find portal with the matching name.\n\tconst doorways = beep8.ECS.query( 'Portal' );\n\tconst targetDoorway = doorways.find(\n\t\t( id ) => {\n\t\t\tconst targetPortal = beep8.ECS.getComponent( id, 'Portal' );\n\t\t\treturn targetPortal.name === portal.target;\n\t\t}\n\t);\n\n\tif ( targetDoorway ) {\n\t\tconst targetLoc = beep8.ECS.getComponent( targetDoorway, 'Loc' );\n\t\tif ( targetLoc ) {\n\t\t\tawait beep8.Async.wait( 0.1 );\n\t\t\tbeep8.ECS.setLoc( mapper.player, targetLoc.col, targetLoc.row );\n\t\t}\n\t}\n\n\treturn false; // Allow stepping onto the portal\n\n};\n\n\nmapper.systems.tryPushing = ( col, row, dx, dy ) => {\n\n\tconst hitX = col + dx;\n\tconst hitY = row + dy;\n\n\tfor ( const id of beep8.ECS.entitiesAt( hitX, hitY ) ) {\n\n\t\t// If not a solid object, or pushable, skip.\n\t\tif ( !beep8.ECS.hasComponent( id, 'Solid' ) ) continue;\n\t\tif ( !beep8.ECS.hasComponent( id, 'Pushable' ) ) continue;\n\n\t\tconst loc = beep8.ECS.getComponent( id, 'Loc' );\n\t\tconst newCol = loc.col + dx;\n\t\tconst newRow = loc.row + dy;\n\n\t\tconst blocked =\n\t\t\t!mapper.collision.isWalkable( newCol, newRow ) ||\n\t\t\tbeep8.ECS.entitiesAt( newCol, newRow ).some( e => beep8.ECS.hasComponent( e, 'Solid' ) );\n\n\t\tif ( !blocked ) {\n\t\t\t// move the pushable thing.\n\t\t\tbeep8.ECS.setLoc( id, newCol, newRow );\n\n\t\t\tbeep8.Sfx.play( 'fx/action/drag' );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\treturn false;\n\n};\n\n\n\nmapper.systems.tryPulling = ( col, row, dx, dy, playerId ) => {\n\n\tconst hitCol = col + dx;\n\tconst hitRow = row + dy;\n\n\tfor ( const id of beep8.ECS.entitiesAt( hitCol, hitRow ) ) {\n\n\t\tif ( !beep8.ECS.hasComponent( id, 'Solid' ) ) continue;\n\t\tif ( !beep8.ECS.hasComponent( id, 'Pushable' ) ) continue; // now covers pull\n\n\t\tconst backCol = col - dx;\n\t\tconst backRow = row - dy;\n\t\tif ( !mapper.collision.isWalkable( backCol, backRow ) ||\n\t\t\tbeep8.ECS.entitiesAt( backCol, backRow ).some( e => beep8.ECS.hasComponent( e, 'Solid' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Move target into player's tile, move player back\n\t\tbeep8.ECS.setLoc( id, col, row );\n\t\tbeep8.ECS.setLoc( playerId, backCol, backRow );\n\n\t\tbeep8.Sfx.play( 'fx/action/drag' );\n\n\t\treturn true;\n\n\t}\n\n\treturn false;\n\n};\n\n\nmapper.systems.teleportSystem = async function( dt ) {\n\n\tconst list = beep8.ECS.query( 'Teleport' );\n\n\tfor ( const [ id, teleport ] of list ) {\n\t\tconst doorways = beep8.ECS.query( 'Portal' );\n\t\tconst targetDoorway = doorways.find(\n\t\t\t( [ targetId ] ) => {\n\t\t\t\tconst targetPortal = beep8.ECS.getComponent( targetId, 'Portal' );\n\t\t\t\treturn targetPortal?.name === teleport.target;\n\t\t\t}\n\t\t);\n\n\t\tif ( targetDoorway ) {\n\t\t\tconst targetLoc = beep8.ECS.getComponent( targetDoorway[ 0 ], 'Loc' );\n\t\t\tif ( targetLoc ) {\n\t\t\t\tawait beep8.Async.wait( 0.1 );\n\t\t\t\tbeep8.ECS.setLoc( id, targetLoc.col, targetLoc.row );\n\t\t\t}\n\t\t}\n\n\t\t// Remove teleport after executing\n\t\tbeep8.ECS.removeComponent( id, 'Teleport' );\n\t}\n\n}\n\n\nmapper.types.skeleton = {\n\n\tinit: function( obj ) { },\n\n\tonCharacterCollision: async function( obj, newCol, newRow, dx, dy ) { },\n\n\tupdate: function( obj ) { },\n\n\trender: function( obj, offsetX = 0, offsetY = 0 ) { },\n\n};\n\nmapper.types.coin = {\n\n\tspawn: function( col, row, props ) {\n\n\t\treturn beep8.ECS.create(\n\t\t\t{\n\t\t\t\tType: { name: 'coin' },\n\t\t\t\tLoc: { col, row },\n\t\t\t\tSprite: {\n\t\t\t\t\ttile: parseInt( mapper.settings.coin ) || 266,\n\t\t\t\t\tfg: props.fg || 14,\n\t\t\t\t\tbg: props.bg || 0\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\n\t},\n\n\tonCharacterCollision: function( id ) {\n\n\t\tbeep8.ECS.removeEntity( id );\n\t\tbeep8.Inventory.add( 'coin' );\n\t\tbeep8.Sfx.play( 'game/coin/002' );\n\n\t\treturn false;\n\n\t},\n\n};\n\nmapper.types.crate = {\n\n\tspawn: function( col, row, props ) {\n\n\t\treturn beep8.ECS.create(\n\t\t\t{\n\t\t\t\tType: { name: 'crate' },\n\t\t\t\tLoc: { col, row },\n\t\t\t\tSprite: {\n\t\t\t\t\ttile: 352,\n\t\t\t\t\tfg: props.fg || 15,\n\t\t\t\t\tbg: props.bg || 0,\n\t\t\t\t\tdepth: 10\n\t\t\t\t},\n\t\t\t\tSolid: {},\n\t\t\t\tPushable: {},\n\t\t\t\tAction: { verb: 'pull' },\n\t\t\t}\n\t\t);\n\n\t},\n\n};\n\nmapper.types.doorOpen = {\n\n\tspawn: function( col, row, props ) {\n\n\t\tconst doorProps = {\n\t\t\tType: { name: 'door' },\n\t\t\tLoc: { col, row },\n\t\t\tSprite: {\n\t\t\t\ttile: 216,\n\t\t\t\tfg: props.fg || 14,\n\t\t\t\tbg: props.bg || 0\n\t\t\t},\n\t\t\tPortal: {\n\t\t\t\tname: props.name || null,\n\t\t\t\ttarget: props.leadsTo || ''\n\t\t\t},\n\t\t};\n\n\t\treturn beep8.ECS.create( doorProps );\n\n\t},\n\n\n\tonCharacterCollision: function( id, newCol, newRow, dx, dy ) {\n\n\t\t// Check if the player is trying to step onto a portal.\n\t\tmapper.systems.tryPortal( newCol, newRow );\n\t\treturn false;\n\n\t},\n\n};\n\nmapper.types.doorStairs = {\n\n\tspawn: function( col, row, props ) {\n\n\t\tconst icon = props.icon || 197;\n\n\t\tconst stairsProps = {\n\t\t\tType: { name: 'doorStairs' },\n\t\t\tLoc: { col, row },\n\t\t\tSprite: {\n\t\t\t\ttile: icon,\n\t\t\t\tfg: props.fg || 14,\n\t\t\t\tbg: props.bg || 0\n\t\t\t},\n\t\t\tPortal: {\n\t\t\t\tname: props.name || null,\n\t\t\t\ttarget: props.leadsTo || ''\n\t\t\t},\n\t\t};\n\n\t\treturn beep8.ECS.create( stairsProps );\n\n\t},\n\n\n\tonCharacterCollision: function( id, newCol, newRow, dx, dy ) {\n\n\t\t// Check if the player is trying to step onto a portal.\n\t\tmapper.systems.tryPortal( newCol, newRow );\n\t\treturn false;\n\n\t},\n\n};\n\nmapper.types.door = {\n\n\tTILE_DOOR_OPEN: 216,\n\tTILE_DOOR_DEFAULT: 219,\n\n\tspawn: function( col, row, props ) {\n\n\t\tconst icon = props.icon || mapper.types.door.TILE_DOOR_DEFAULT;\n\n\t\tconst doorProps = {\n\t\t\tType: { name: 'door' },\n\t\t\tLoc: { col, row },\n\t\t\tSprite: {\n\t\t\t\ttile: icon,\n\t\t\t\tfg: props.fg || 14,\n\t\t\t\tbg: props.bg || 0\n\t\t\t},\n\t\t\tPortal: {\n\t\t\t\tname: props.name || null,\n\t\t\t\ttarget: props.leadsTo || ''\n\t\t\t},\n\t\t};\n\n\t\tif ( icon !== mapper.types.door.TILE_DOOR_OPEN ) {\n\t\t\tdoorProps.Solid = {};\n\t\t}\n\n\t\treturn beep8.ECS.create( doorProps );\n\n\t},\n\n\n\tonCharacterCollision: function( id, newCol, newRow, dx, dy ) {\n\n\t\t// If the door is open, allow passing through.\n\t\tif ( !beep8.ECS.hasComponent( id, 'Solid' ) ) {\n\n\t\t\t// Check if the player is trying to step onto a portal.\n\t\t\tmapper.systems.tryPortal( newCol, newRow );\n\t\t\treturn false;\n\n\t\t}\n\n\t\tconst sprite = beep8.ECS.getComponent( id, 'Sprite' );\n\t\tconst keyName = `key-${sprite.fg ?? \"default\"}`;\n\n\t\tif ( beep8.Inventory.has( keyName ) ) {\n\t\t\tbeep8.ECS.removeComponent( id, 'Solid' );\n\t\t\tsprite.tile = mapper.types.door.TILE_DOOR_OPEN;\n\t\t\tbeep8.Sfx.play( 'ui/click/004' );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n};\n\nmapper.types.key = {\n\n\tspawn: function( col, row, props ) {\n\n\t\treturn beep8.ECS.create(\n\t\t\t{\n\t\t\t\tType: { name: 'key' },\n\t\t\t\tLoc: { col, row },\n\t\t\t\tSprite: {\n\t\t\t\t\ttile: 255,\n\t\t\t\t\tfg: props.fg || 14,\n\t\t\t\t\tbg: props.bg || 0\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\n\t},\n\n\tonCharacterCollision: function( id, newCol, newRow, dx, dy ) {\n\n\t\tconst keyName = `key-${beep8.ECS.getComponent( id, 'Sprite' ).fg ?? \"default\"}`;\n\t\tbeep8.Inventory.add( keyName );\n\n\t\t// console.log( 'Collect key:', keyName );\n\n\t\tbeep8.ECS.removeEntity( id );\n\t\tbeep8.Sfx.play( 'tone/bloop/006' );\n\n\t\treturn false;\n\n\t},\n\n};\n\nmapper.types.signpost = {\n\n\tspawn: function( col, row, props ) {\n\n\t\treturn beep8.ECS.create(\n\t\t\t{\n\t\t\t\tType: { name: 'signpost' },\n\t\t\t\tLoc: { col, row },\n\t\t\t\tSprite: {\n\t\t\t\t\ttile: props.icon || 252,\n\t\t\t\t\tfg: props.fg || 15,\n\t\t\t\t\tbg: props.bg || 0\n\t\t\t\t},\n\t\t\t\tSolid: {},\n\t\t\t\tMessage: { message: props.message || \"\" },\n\t\t\t\tAction: { verb: 'read' },\n\t\t\t}\n\t\t);\n\n\t},\n\n};\n\n\nmapper.types.start = {\n\n\tspawn: function( col, row, props ) {\n\n\t\tbeep8.ECS.setLoc( mapper.player, col, row );\n\t\t// player.x = x;\n\t\t// player.y = y;\n\n\t},\n\n};\n"],
  "mappings": "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",
  "names": ["offsetX", "offsetY"]
}
