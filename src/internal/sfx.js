( function( beep8 ) {

	beep8.Sfx = {};


	/**
	 * Sound effect library.
	 *
	 * @see https://killedbyapixel.github.io/ZzFX/
	 * @see https://codepen.io/KilledByAPixel/pen/BaowKzv?editors=1000
	 * @type {Object}
	 */
	beep8.Sfx.library = {

		'fx/action/drag': [ , 0, 293.6648, .1, , , 4, 6, 32, , , , , 1, 1.4, .1, , .7, .1 ],

		'fx/break/001': [ 2.1, , 339, .02, .07, .09, 4, .2, -7, , , , .05, 1, , .1, .16, .45, .02, .03 ],
		'fx/break/002': [ 1.5, , 157, .16, , 0, , .35, -24, 28, , , , .1, , .6, , .19, .01 ],
		'fx/break/003': [ 2, , 180, 0.05, 0.03, 0.04, , 2.42, 0.6, , , , , , , , 0.15, 0.39, 0.04 ],

		'fx/fight/dodge': [ 1.2, .3, 150, .05, , .05, , , -1, , , , , 4, , , , , .02 ],
		'fx/fight/hit': [ 5, , 185, , , , 3, 1.6, -7, , , , , , , .2, .19, .1, , .38, 985 ],

		'fx/robot/001': [ 1.13, , 172, .04, .18, .09, , .06, - 38, -2.6, -99, , , , 35, , .08 ],
		'fx/robot/002': [ 1.42, , 61, .01, .02, 0, 1, .21, , , 816, .01, .05, , -40, , .05, .71, .11 ],
		'fx/robot/003': [ .9, , 164, .04, .03, .14, , .8, 46, 66, , , , , , , , .71, .08, , 217 ],
		'fx/robot/004': [ , .02, 1638, , .05, .17, 1, , , , 490, .09, , , , .1, .05, .5, .03 ],

		'fx/sci-fi/radioactive': [ 1, 0, 130, .02, .9, .39, 2, .8, , , , , .13, .2, , .1, , .93, .06, .28 ],
		'fx/sci-fi/robot': [ 1, 0, 847, .02, .3, .9, 1, 1.67, , , -294, .04, .13, , , , .1 ],
		'fx/sci-fi/teleport': [ 1, , 85, .08, .1, .01, 1, 4, , -11, 1, .07, , .1, 101, , .05, .68, .4, .12, 1 ],
		'fx/sci-fi/warp': [ 3, 0, 713, .16, .09, .24, , .6, -29, -16, , , .09, .5, , , .23, .75, .15, .48 ],
		'fx/sci-fi/beam': [ 1, 0, 662, .82, .11, .33, 1, 0, , -0.2, , , , 1.2, , .26, .01 ],
		'fx/sci-fi/hover': [ 2, 0, 262.63, 0.1, 0.12, 0.3, 0, 2.4, -0.1, 0, 0, 0, 0.24, 0, 0, 0.1, 0.05, 0.98, 0.07, 0.17, 0 ],

		'fx/thud/001': [ 1.5, , 90, , .01, .03, 4, , , , , , , 9, 50, .2, , .2, .01 ],
		'fx/thud/002': [ 1, , 129, .01, , .15, , , , , , , , 5 ],

		'fx/machine/buzz': [ 1, 0, 130.8128, .1, .1, .34, 3, 1.88, , , , , , , , .1, , .5, .04 ],
		'fx/machine/hum': [ 1, 0, 63, , 1, , 1, 1.5, , , , , , , , 3.69, .08 ],
		'fx/machine/humm': [ 1, , 110, .03, .25, .15, 2, 1.32, , , , , .07, , -0.1, , .11, .77 ],
		'fx/machine/warp': [ 2, , 128, , .12, .26, , 4.7, , -1, -62, .06, .07, , 52, , , .66, .08 ],

		'fx/noise/001': [ 1.27, , 390, 0.01, 0.04, 0.02, 4, 0.71, 4.8, , , , , , , , 0.01, 0.6, 0.06 ],
		'fx/noise/002': [ 0.4, , 60, , 0.01, 0, 4, 0.55, 62, 89, -88, 0.06, , , 173, 0.6, , , 0.05 ],
		'fx/noise/003': [ 0.2, , 523.2511, .1, 3, 3, 4, 0, , , 2250, , .04, , 10, .01, , .82, 1, , 30 ],

		'fx/random/tone': [ 2, .8, 999, , , , 1, 2, , , , , 1, , , .1, .2 ],

		'fx/swoosh/001': [ 1, , 1500, 0.02, , 0.02, 4, 0.68, 5, , , , 0.01, 0.7, 136, , , , , 0.11 ],
		'fx/swoosh/002': [ 1.2, , 585, , .02, .16, 4, .25, , , , , , , , , , .55, .03 ],
		'fx/swoosh/003': [ .2, , 836, .11, , 0, 4, .91, 13, , , , .09, .1, -39, , , .06, .07 ],
		'fx/swoosh/004': [ 1.2, , 9220, .01, , , , 5, , , , , , 9 ],
		'fx/swoosh/005': [ 1.5, 0, 150, .05, , .05, , 1.3, , , , , , 3 ],
		'fx/swoosh/006': [ 2, , 12, , , 0.008, , 1.2, 23, -7, , , 0.05, 0.4, , , 0.15, 0.82, 0.03, 0.28, ],

		'fx/vehicle/engine': [ 1.2, 0, 25, .05, .3, .5, 3, 9, -0.01, , , , , , 13, .1, .2 ],
		'fx/vehicle/carhorn': [ 1.8, 0, 250, .02, .02, .2, 2, 2, , , , , .02, , , .02, .01, , , .1 ],
		'fx/vehicle/horn': [ 2, , 688, .02, .01, .007, 1, 2.6, , , , , .01, , 85, , .01, .85, .03, .11, -818 ],
		'fx/vehicle/truckhorn': [ 1.5, , 1376, .02, .01, .007, 1, 2.6, , , , , .01, , 85, , .01, .85, .8, .11, -818 ],
		'fx/vehicle/siren': [ 1.3, 0, 960, , 1, .01, , .8, -0.01, , -190, .5, , .05, , , 1 ],
		'fx/vehicle/submarine': [ 1.2, 0, 1975, .08, .56, .02, , , -0.4, , -322, .56, .41, , , , .25 ],
		'fx/vehicle/rocket': [ 1.5, 0, 941, .8, , .8, 4, .74, -222, , , , , .8, , 1 ],

		'game/coin/001': [ 1.2, 0, 1675, , .06, .24, 1, 1.82, , , 837, .06 ],
		'game/coin/002': [ 1.2, 0, 523.2511, .01, .06, .3, 1, 1.82, , , 837, .06 ],
		'game/coin/003': [ 0.6, 0, 1874, , 0.01, 0.25, 2, 0.76, , , 622, 0.1 ],
		'game/coin/004': [ 1, 0, 277, .03, .04, .06, 1, 1.8, 1, , 140, .06, .04, , , .1, , .99, .03 ],

		'game/collect/001': [ 1.1, 0, 450, , .01, .13, , 2.7, , -9.5, 500, .08, , , , , , .89 ],
		'game/collect/002': [ 1.05, , 10, .08, .07, .24, 2, 1.03, , , -374, .04, .09, , , , , .72, .15, .18 ],

		'game/die/001': [ 1.5, 0, 537, .02, .02, .22, 1, 1.59, -6.98, 4.97 ],
		'game/die/002': [ 1, , 321, .01, .06, .06, 1, 3.8, , -49, , , , .3, , , , .79, .09 ],
		'game/die/003': [ 1, 0, 344, .01, .02, .28, 1, 1.4, , , 50, , , , .3, .2, .15, .6, .06 ],
		'game/die/004': [ 0.5, 0, 43, 0.01, , 1, 2, , , , , , , , , 0.02, 0.01 ],

		'game/jump/001': [ 1, .1, 75, .03, .08, .17, 1, 1.88, 7.83, , , , , .4 ],
		'game/jump/002': [ 1.2, , 311, .03, .05, .05, , 2.2, , 9, , , .02, , 2.7, , , .97, .05, , 101 ],
		'game/jump/003': [ 1.5, , 65, .04, .1, .13, 1, 1.5, , -31, , , , .3, , , , .99, .03 ],
		'game/jump/004': [ , 0, 500, , .01, .13, , .2, 1.7, , -400 ],
		'game/jump/005': [ 1, , 341, , .14, .23, 1, 1.01, .9, , -132, .03, , .1, , .1, , .52, .22 ],
		'game/jump/006': [ 0.7, , 1496, .09, .09, .01, 3, .14, , , -870, , , , 3.2, .2, , .31, .02 ],

		'game/powerup/001': [ , , 188, .03, .09, .12, 1, 2.4, , 95, , , , , , , , .63, .08 ],
		'game/powerup/002': [ 0.8, 0, 413, .03, .05, .05, , 1.8, , 19, 177, .05, , , , , , .83, .02 ],
		'game/powerup/003': [ 0.5, , 643, , 0.1, 0.12, 1, 0.1, , 99, , , , , , , , 0.6, 0.02, , -732 ],
		'game/powerup/004': [ 1.18, , 143, .05, .08, .06, , .09, 25, 4.1, , , , , , , .01, .52, .09 ],
		'game/powerup/005': [ 1, , 18, 0.01, 0.01, 0.21, 1, 0.49, 9.9, , , , , , , , 0.04, 0.95, 0.02 ],
		'game/powerup/006': [ 0.5, , 426, .01, , .05, , 2.54, 49, , 9, .1, , , , , , .46, .15 ],
		'game/powerup/007': [ 1, , 158, .09, .18, .03, , 2.53, 11, -58, 63, .02, .01, .5, , , , .16 ],
		'game/powerup/008': [ 1.2, 0, 539, 0, .04, .29, 1, 1.92, , , 567, .02, .02, , , , .04 ],

		'instrument/bass/001': [ 2, 0, 65, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/002': [ 2, 0, 73, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/003': [ 2, 0, 82, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/004': [ 2, 0, 87, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/005': [ 2, 0, 97, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/006': [ 2, 0, 110, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/007': [ 2, 0, 123, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],
		'instrument/bass/008': [ 2, 0, 130, .01, .08, .2, , 2.6, , , , , , .1, , , , .61, .02, , -1686 ],

		'instrument/drum/001': [ 1.5, 0, 86, , , , , 0.7, , , , 0.5, , 6.7, 1, 0.05 ],
		'instrument/drum/002': [ 0.7, 0, 270, , , 0.12, 3, 1.65, -2, , , , , 4.5, , 0.02 ],

		'tone/beep/001': [ 2, 0, 130, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/002': [ 2, 0, 146, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/003': [ 2, 0, 164, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/004': [ 2, 0, 174, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/005': [ 2, 0, 195, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/006': [ 2, 0, 220, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/007': [ 2, 0, 246, , .1, , 1, 1.5, , , , , , , , .1, .01 ],
		'tone/beep/008': [ 2, 0, 261, , .1, , 1, 1.5, , , , , , , , .1, .01 ],

		'tone/bell/001': [ 2, 0, 999, , , , , 1.5, , .3, -99, .1, 1.63, , , .11, .22 ],
		'tone/bell/002': [ , 0, 1600, .13, .52, .61, 1, 1.1, , , , , , .1, , .14 ],
		'tone/bell/random': [ 2, .1, 999, , , , , 1.5, , .3, -99, .1, 1.63, , , .11, .22 ],

		'tone/blip/001': [ 5, 0, 130, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/002': [ 3, 0, 146, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/003': [ 3, 0, 164, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/004': [ 3, 0, 174, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/005': [ 3, 0, 195, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/006': [ 3, 0, 220, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/007': [ 3, 0, 246, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],
		'tone/blip/008': [ 3, 0, 261, .02, .03, .02, , 2.8, , , , , , , , , , .7, .02 ],

		'tone/bloop/001': [ 1, , 110, .02, , .09, 1, .61, , , 556, .12, , , , .3, , , .02 ],
		'tone/bloop/002': [ 1, 0, 521.25, , .02, .03, 2, 0, , .1, 700, .01, , , 1, .1 ],
		'tone/bloop/003': [ 1.12, , 73, , 0.02, 0.11, 2, 1.18, , -0.1, , , , , , 0.3, , 0.55, 0.05, 0.23 ],
		'tone/bloop/004': [ 0.5, , 1368, .09, , 0, , 1.11, -76, 9.1, -490, , , , , , , .56 ],
		'tone/bloop/005': [ 2.03, , 413, , , 0.24, 2, 0.12, , , , , 0.11, , 317, 0.1, 0.13, , , 0.01 ],
		'tone/bloop/006': [ , 0, , .01, .02, .09, , .6, 17, -3, , , .1, , , , , .76, .08 ],
		'tone/bloop/007': [ 0.3, , 10, 0.06, , 0, 2, 2.3, , , 621, , , , , , , , 0.21, 0.26 ],
		'tone/bloop/008': [ 1.5, 0.05, 24, 0.01, 0.02, 0.01, 1, 3.9, -33, 0, 0, 0, 0, 0, 355, 0, 0, 0.65, 0, 0, 0 ],
		'tone/bloop/009': [ 2, 0.05, 226, 0, 0.08, 0.13, 0, 3.1, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.02, 0.76, 0.04, 0, 105 ],
		'tone/bloop/010': [ 4, 0, 224, .02, .02, .08, 1, 1.7, -13.9, , , , , , 6.7 ],
		'tone/bloop/011': [ 1, , 283, .02, , .11, , .38, , , , , .07, , , .1, .08, .63, .02 ],
		'tone/bloop/012': [ 1, 0, 288, 0.05, 0.01, , , 2, - 10, , , , , , , , , 0.5, 0.1 ],
		'tone/bloop/013': [ 2, 0, 700, 0.01, , 0, , , , , , , , , , , , 0.1, 0.01 ],
		'tone/bloop/014': [ 2.21, , 107, 0.02, 0.04, 0.07, , 2.22, 2, 0.9, , , , 0.4, , 0.5, 0.15, 0.42, 0.04 ],
		'tone/bloop/015': [ 0.6, 0, 2200, , , 0.04, 3, 2, , , 800, 0.02, , 4.8, , 0.01, 0.1 ],

		'tone/jingle/001': [ 1.4, , 183, .07, .13, .34, , 3.3, , , 35, .06, .07, , , , .13, .95, .27, .11 ],
		'tone/jingle/002': [ .8, , 208, .02, .21, .13, 3, .2, , , 40, .06, .1, , , , , .91, .2, .27 ],
		'tone/jingle/003': [ .9, , 56, .15, .46, .08, , 1.6, -2, , -137, .01, .06, , , , .09, .77, .37, .13 ],
		'tone/jingle/004': [ .6, , 269, .03, .17, .41, , .2, , 1, 239, .08, .04, , , , , .72, .19, .43, -720 ],
		'tone/jingle/005': [ 1.3, 0, 130.81, 0.32, 0.35, 0.5, 3, 5.2, 0, 1, 50, 0, 0.14, 0, 0, 0, 0, 0.37, 0.04, 0.24, 0 ],
		'tone/jingle/006': [ 1, , 525, .18, .28, .17, 1, 1.24, 8.3, -9.7, -151, .03, .06, , , , , .93, .02, .14 ],
		'tone/jingle/007': [ .6, , 934, .12, .38, .93, 1, .27, , .4, -434, .08, .2, .1, , .1, .17, .55, 1, .46 ],
		'tone/jingle/008': [ 1.4, 0, 20, .04, , .6, , 1.31, , , -990, .06, .17, , , .04, .07 ],
		'tone/jingle/009': [ 1.2, 0, 80, .3, .4, .7, 2, .1, -0.73, 3.42, -430, .09, .17, , , , .19 ],
		'tone/jingle/010': [ 0.5, , 392, .06, .22, .5, 1, 1.85, -0.1, -0.9, 61, .05, .07, , , .1, , .96, .12 ],
		'tone/jingle/011': [ 0.5, , 146, .04, .23, .46, , .56, , -3.7, 658, .02, .15, .1, , , , .82, .13, .2 ],
		'tone/jingle/012': [ 1, , 284, .08, .2, .25, 1, 3, , , 50, .09, .06, , , , , .6, .28, .03, -1391 ],
		'tone/jingle/013': [ 1.5, , 430, .02, .12, .5, , .89, , -3.6, -133, .07, .13, , , .1, , .83, .23, .26 ],
		'tone/jingle/014': [ 0.4, , 22, .08, .22, .02, 1, .52, -4.2, -9.8, , , .14, , -18, .2, , , .05 ],
		'tone/jingle/015': [ , , 193, .04, .27, .42, 1, 1.71, 2.8, 4.9, , , .1, .2, , .1, , .55, .27, .47 ],
		'tone/jingle/016': [ 1.1, , 250, .07, .24, .26, , 2, , 164, 211, .07, .08, , , .1, , .75, .12, .09, 115 ],
		'tone/jingle/017': [ , , 103, .04, .11, .43, 1, .77, , , 57, .19, .05, , , .1, , .68, .24 ],

		'ui/click/001': [ 1.5, 0, 900, , .01, 0, 1, , -10, , -31, .02, , , , , , 1.2, , .16, -1448 ],
		'ui/click/002': [ 2.5, , 783, , .03, .02, 1, 2, , , 940, .03, , , , , .2, .6, , .06 ],
		'ui/click/003': [ 1.5, .01, 300, , , .02, 3, .22, , , -9, .2, , , , , , .5 ],
		'ui/click/004': [ 1, 0, 685, .01, .03, .17, 1, 1.4, , , , , , , , , , .63, .01, , 420 ],
		'ui/click/005': [ 6, , 205, , .02, 0, , 1.03, , , , , , , , , .12, .32 ],

		'weapon/explode/001': [ 1.5, 0, 333, .01, 0, .9, 4, 1.9, , , , , , .5, , .6 ],
		'weapon/explode/002': [ 1.1, 0, 418, 0, .02, .2, 4, 1.15, -8.5, , , , , .7, , .1 ],
		'weapon/explode/003': [ 1.2, 0, 82, .02, , .2, 4, 4, , , , , , .8, , .2, , .8, .09 ],
		'weapon/explode/004': [ 2, .2, 72, .01, .01, .2, 4, , , , , , , 1, , .5, .1, .5, .02 ],
		'weapon/explode/005': [ 2, , 1e3, .02, , .2, 1, 3, .1, , , , , 1, -30, .5, , .5 ],
		'weapon/explode/006': [ 1, , 485, .02, .2, .2, 4, .11, -3, .1, , , .05, 1.1, , .4, , .57, .5 ],
		'weapon/explode/007': [ 0.8, , 372, 0.02, 0.02, 0.5, 4, 2.29, 0.2, , , , , 0.6, , 0.6, , 0.7, 0.04, 0.19 ],
		'weapon/explode/008': [ 1.05, , 591, .03, .13, .51, 4, 3.02, .6, .1, , , .04, 1.6, , 1, , .46, .13 ],
		'weapon/explode/009': [ 1.99, , 770, 0.03, 0.19, 0.35, , 0.26, , , , , , 2, -50, 0.1, 0.27, 0.48, 0.06 ],
		'weapon/explode/010': [ 1.5, , 98, .08, .18, .02, 2, 2.47, 36, .5, , , .04, .1, , .9, .44, , .04 ],
		'weapon/explode/011': [ 1, , 400, , .03, .21, 3, .85, .5, , , , , 1.8, , .5, , .97, .05 ],
		'weapon/explode/012': [ 1, , 485, .02, .07, .03, 4, .11, -3, .1, , , .05, 1.1, , .4, , .57, .09 ],
		'weapon/explode/013': [ , , 30, .09, .12, .35, 4, 3, 4, , , , , 1.3, , .6, , .36, .21 ],

		'weapon/lazer/001': [ 1.5, 0, 515, .05, .07, .09, 1, 2.8, , , 302, .06, .1, , 3.5, .1, .08, .75, .04 ],
		'weapon/lazer/002': [ , 0, 925, .04, .3, .6, 1, .3, , 6.27, -184, .09, .17 ],
		'weapon/lazer/003': [ 1, , 375, .01, .06, , 2, 2.3, 18, -10, , , , , 18, , , .56, .14 ],
		'weapon/lazer/004': [ 0.5, , 2e3, , 0.05, 0, , 1.11, -17, , 197, 0.01, , 0.2, , , , , 0.16 ],
		'weapon/lazer/005': [ .9, , 752, .03, .01, .02, , 1.4, , , -10, .01, , , 3.4, , , .68, .03, , 106 ],
		'weapon/lazer/006': [ 1.9, , 221, .01, .05, .06, 1, 3.9, -2, , 116, .05, , , , , , .65, .02, , 452 ],
		'weapon/lazer/007': [ 1, , 659, .01, .04, , 1, .4, , -75, 179, .06, , , .2, , , .57 ],

		'world/footstep/001': [ 1.1, 0.05, 157, 0.03, 0.04, 0.04, 4, 4.9, 78, -13, 0, 0, 0.07, 0, 0, 0, 0, 0.91, 0.02, 0.33, 0 ],
		'world/footstep/002': [ .1, 1, 300, .05, .1, .05, 4, .2, -100, , -50, .07, , .5, , .4, , , , .05 ],
		'world/footstep/003': [ 3, , 5, , .06, .01, 2, 2.25, -19, -79, 409, .01, , , 6.6, , .2, .57, , .8 ],

		'world/nature/frog': [ 0.5, , 160, .03, .03, .02, , 1.52, -23, 93, 662, .02, , , , .1, , , .07, .01 ],
		'world/nature/dolphin': [ 0.5, 0, 448, .01, .1, .3, 3, .39, -0.5, , , , , , .2, .1, .08 ],
		'world/nature/whale': [ 1.2, 0, 1306, .8, .08, .02, 1, , , , , , .48, , -0.1, .11, .25 ],
		'world/nature/mouse': [ 1.2, 0, 1e3, .02, , .01, 2, , 18, , 475, .01, .01 ],
		'world/nature/small-dog': [ 1, , 759, .01, , .01, 1, .97, 15, , , , , , 3.1, , , .76, .04 ],
		'world/nature/tweet': [ 0.7, , 1305, , , .03, 1, .75, , 23, 694, .01, , , 3.9, , , , .01 ],

		'world/water/splash': [ 2, , 94, .07, .1, .33, 4, .6, 1, , , , , .1, 1, .1, .1, .45, .15 ],
		'world/water/wave': [ 1, 0, 40, .5, , 1.5, , 11, , , , , , 199 ],
		'world/water/pop': [ 1, 0, 103, , 0.02, 0.06, , 1.24, - 18, 4.4, , , , 0.7, , 0.1, , 0.95, 0.03 ],

		'world/weather/thunder': [ 1.2, 0, 471, , .09, .47, 4, 1.06, -6.7, , , , , .9, 61, .1, , .82, .09, .13 ],

	};


	/**
	 * Play a named sound effect.
	 *
	 * @param {string} sfx - The name of the sound effect to play.
	 * @throws {Error} If the sfx is not found.
	 * @returns	{void}
	 */
	beep8.Sfx.play = function( sfx = '' ) {

		// Quit if no sound specified.
		if ( !sfx ) return;

		// Check the sfx is a string.
		beep8.Utilities.checkString( 'sfx', sfx );

		// SFX not found.
		if ( !beep8.Sfx.library[ sfx ] ) {
			beep8.Utilities.fatal( `SFX ${sfx} not found.` );
		}

		beep8.Sfx.playFromArray( beep8.Sfx.library[ sfx ] );

	}


	/**
	 * Play a sound effect from a ZzFX array.
	 *
	 * This array can be generated with ZzFX. It should be just the array beginning and ending with square brackets.
	 *
	 * @see https://killedbyapixel.github.io/ZzFX/
	 *
	 * @param {Array} sfxArray - The sound effect array to play.
	 * @returns {void}
	 */
	beep8.Sfx.playFromArray = function( sfxArray = [] ) {

		// Check the sfx is an array.
		beep8.Utilities.checkArray( 'sfxArray', sfxArray );

		// Play the raw sound effect.
		zzfx( ...sfxArray );
	}


	/**
	 * Add a sound effect to the library.
	 *
	 * @param {string} sfxName - The name of the sound effect.
	 * @param {Array} sfxArray The sound effect array.
	 * @throws {Error} If the sfxName is not a string.
	 * @throws {Error} If the sfxArray is not an array.
	 * @return {void}
	 */
	beep8.Sfx.add = function( sfxName, sfxArray ) {

		beep8.Utilities.checkString( 'sfxName', sfxName );
		beep8.Utilities.checkArray( 'sfxArray', sfxArray );

		beep8.Sfx.library[ sfxName ] = sfxArray;

	}


	/**
	 * Get the list of sfx from the library.
	 *
	 * @return {Array} The list of sfx.
	 */
	beep8.Sfx.get = function() {

		return Object.keys( beep8.Sfx.library );

	}

} )( beep8 || ( beep8 = {} ) );
